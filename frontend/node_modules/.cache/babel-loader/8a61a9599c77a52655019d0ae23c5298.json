{"ast":null,"code":"import _slicedToArray from\"C:/Users/Khushi Singh/OneDrive/Desktop/Medicator-master/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import QrReader from\"react-qr-scanner\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var QRCodeScanner=function QRCodeScanner(props){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),result=_useState2[0],setResult=_useState2[1];function handleScan(data){setResult(data);if(data!==null){props.xd(data);}}function handleError(err){{}}var previewStyle={width:\"100%\",height:\"100%\",display:\"flex\",justifyContent:\"center\"};var camStyle={display:\"flex\",justifyContent:\"center\"};var textStyle={fontSize:\"2vh\",textAlign:\"center\"};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"div\",{style:camStyle,children:/*#__PURE__*/_jsx(QrReader,{delay:100,style:previewStyle,onError:handleError,onScan:handleScan})})});};","map":{"version":3,"sources":["C:/Users/Khushi Singh/OneDrive/Desktop/Medicator-master/frontend/src/Components/utils/QRCodeScanner/QRCodeScanner.jsx"],"names":["React","useState","QrReader","QRCodeScanner","props","result","setResult","handleScan","data","xd","handleError","err","previewStyle","width","height","display","justifyContent","camStyle","textStyle","fontSize","textAlign"],"mappings":"uLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,C,gGAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,eACVH,QAAQ,CAAC,EAAD,CADE,wCAC/BI,MAD+B,eACvBC,SADuB,eAGtC,QAASC,CAAAA,UAAT,CAAoBC,IAApB,CAA0B,CACxBF,SAAS,CAACE,IAAD,CAAT,CACA,GAAIA,IAAI,GAAK,IAAb,CAAmB,CACjBJ,KAAK,CAACK,EAAN,CAASD,IAAT,EACD,CACF,CAED,QAASE,CAAAA,WAAT,CAAqBC,GAArB,CAA0B,CACxB,CACC,CACF,CAED,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,MADY,CAEnBC,MAAM,CAAE,MAFW,CAGnBC,OAAO,CAAE,MAHU,CAInBC,cAAc,CAAE,QAJG,CAArB,CAOA,GAAMC,CAAAA,QAAQ,CAAG,CACfF,OAAO,CAAE,MADM,CAEfC,cAAc,CAAE,QAFD,CAAjB,CAKA,GAAME,CAAAA,SAAS,CAAG,CAChBC,QAAQ,CAAE,KADM,CAEhBC,SAAS,CAAE,QAFK,CAAlB,CAKA,mBACE,sCACE,YAAK,KAAK,CAAEH,QAAZ,uBACE,KAAC,QAAD,EACE,KAAK,CAAE,GADT,CAEE,KAAK,CAAEL,YAFT,CAGE,OAAO,CAAEF,WAHX,CAIE,MAAM,CAAEH,UAJV,EADF,EADF,EADF,CAYD,CA5CM","sourcesContent":["import React, { useState } from \"react\";\nimport QrReader from \"react-qr-scanner\";\n\nexport const QRCodeScanner = (props) => {\n  const [result, setResult] = useState(\"\");\n\n  function handleScan(data) {\n    setResult(data);\n    if (data !== null) {\n      props.xd(data);\n    }\n  }\n\n  function handleError(err) {\n    {\n    }\n  }\n\n  const previewStyle = {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n  };\n\n  const camStyle = {\n    display: \"flex\",\n    justifyContent: \"center\",\n  };\n\n  const textStyle = {\n    fontSize: \"2vh\",\n    textAlign: \"center\",\n  };\n\n  return (\n    <>\n      <div style={camStyle}>\n        <QrReader\n          delay={100}\n          style={previewStyle}\n          onError={handleError}\n          onScan={handleScan}\n        />\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}